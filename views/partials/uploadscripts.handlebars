<script type="text/javascript">
$(function() {

  function appendToInput(inputElement, appendedText) {
    if(inputElement.selectionStart){ //if the cursor has a position in the box
      var cursorPos = inputElement.selectionStart;
      inputElement.value = inputElement.value.substring(0,cursorPos) + appendedText + inputElement.value.substring(cursorPos);
      inputElement.selectionStart = cursorPos + appendedText.length; //this maintains the cursor position so adding multiple appendedTexts at once will put them in the same place
      inputElement.selectionEnd = cursorPos + appendedText.length;
      inputElement.focus();
    }else if(inputElement.selectionStart===0){ //special case: when the cursor is at position 0, the above condition won't work, we need to handle that better
      inputElement.value = appendedText + inputElement.value;
      inputElement.selectionStart = appendedText.length; //this maintains the cursor position so adding multiple appendedTexts at once will put them in the same place
      inputElement.selectionEnd = appendedText.length;
      inputElement.focus();
    }else{ //if there is no cursor, just add it on the end. this is also the only way this will work on IE8 and below.
      inputElement.value+=appendedText;
      inputElement.focus();
    }
  }

  var editor = new MediumEditor('.editable-text', {
    buttonLabels: 'fontawesome',
    toolbar: {
      buttons: ['bold','italic']
    },
    keyboardCommands: {
      commands: [
        {
            command: 'bold',
            key: 'B',
            meta: true,
            shift: false,
            alt: false
        },
        {
            command: 'italic',
            key: 'I',
            meta: true,
            shift: false,
            alt: false
        }
      ],
    },
    placeholder: {
        text: 'Write something.'
    }
  });

  $(".editable-post-content").focus(function(){
    $(".post-controls").css('display', 'flex');
  })
  //upload = new FileUploadWithPreview('postImageUpload')
  $("#postContentWarningsButton").click(function(){
    $("#postContentWarningsContainer").slideToggle("fast");
  })
  $("#emojiWindowButton").click(function(){
    $("#emojiWindow").slideToggle("fast")
  })
  $(".emoji").click(function(){
    appendToInput($("#postForm").find('.editable-post-content')[0], event.target.innerHTML);
  })
  $("#postImageButton").click(function(){
    $(".file-input").click();
    let imagePrevCont = $('.custom-file-container')[0];
    imagePrevCont.style.display = "block"
    imagePrevCont.style.height = (imagePrevCont.parentElement.parentElement.offsetWidth * (2.0/3))+"px";
    $('#imagePreviewContainer').slideDown('fast');
  })

  function resetImageUploadFields(){
    $("#postImageUrl").val("");
    $("#postImageTags").val("");
    $("#postSubmit").html($("#postSubmit").html()).prop('disabled', false);
    $(".editable-post-content").prop('required',true);
    $(".image-preview")[0].style.backgroundImage = "url(/images/imagePreviewWindowDefault.jpg)";
    $(".file-input").val(null);
  }

  $(".file-input").change(function (e) {
      var submitButtonValue = $("#postSubmit").html()
      $("#postSubmit").html("<i class='fas fa-spinner fa-spin'></i> Uploading").prop('disabled', true);

      let fr = new FileReader();
      fr.onload = function(e){
        $(".image-preview")[0].style.backgroundImage = "url("+e.target.result+")";
      }
      fr.readAsDataURL(this.files[0]);

      var fd = new FormData();
      fd.append('image', this.files[0]);
      var imageUploadReq = $.ajax({
        url: '/api/image/v2',
        type: 'POST',
        data: fd,
        processData: false,
        contentType: false
      })
      .done(function( data ) {
        var uploadedImage = JSON.parse(data)
        if (uploadedImage.error){
          if (uploadedImage.error == "filesize"){
            bootbox.alert("Image too large! The maximum size for GIF images is 5MB and for JPG and PNG images is 10MB.", function(){
              resetImageUploadFields();
            });
          }
        }
        else {
          $("#postImageUrl").val(uploadedImage.url);
          $("#postImageTags").val(uploadedImage.tags);
          $("#postSubmit").html(submitButtonValue).prop('disabled', false);
          $(".editable-post-content").removeAttr("required");
        }
      });
      $(".image-clear").click(function(e){
        if(imageUploadReq.readyState != 4){
          imageUploadReq.abort();
        }else{
          let jsonResponse = JSON.parse(imageUploadReq.responseText);
          $.post( "/cleartempimage", { imageURL: jsonResponse.url } );
        }
        resetImageUploadFields();
      })
  })
  // document.onpaste = function(event){
  //   var items = (event.clipboardData || event.originalEvent.clipboardData).items;
  //   for (var i = 0 ; i < items.length ; i++) {
  //     var item = items[i];
  //     if (item.type.indexOf("image") != -1) {
  //       var file = item.getAsFile();
  //       $('#imagePreviewContainer').slideDown('fast');
  //       upload_file_with_ajax(file);
  //     }
  //   }
  // }

  $(window).on("unload", function(e) {
    $.post( "/cleartempimage", { imageURL: $("#postImageUrl")[0].value } );
  });

  $.post('/api/user/followers', function(data){
    followers = JSON.parse(data).followers;
    tribute = new Tribute({
      values: followers,
      menuItemTemplate: function (item) {
        return '<img class="tribute-image" src="/images/'+item.original.image + '">' + item.string;
      }
    })
    tribute.attach($(".editable-text"));
  })
})
</script>

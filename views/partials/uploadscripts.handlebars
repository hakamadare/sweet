<script type="text/javascript">
$(function() {
  $(".editable-post-content").focus(function(){
    $(".post-controls").css('display', 'flex');
  })
  $("#postContentWarningsButton").click(function(){
    $("#postContentWarningsContainer").slideToggle("fast");
  })
  $("#emojiWindowButton").click(function(){
    $("#emojiWindow").slideToggle("fast")
  })
  $("#emojiWindow>.add-emoji").click(function(){
    pasteHtmlAtCaret($("#postForm").find('.editable-post-content.medium-editor-element'), '<span class="emoji"> ' + event.target.innerHTML + '</span>');
  })
  $("#postImageButton").click(function(){
    $(".file-input").click();
  })
  
  $(".file-input").change(function (e) {
      var submitButtonValue = $("#postSubmit").html();
      $("#postSubmit").html("<i class='fas fa-spinner fa-spin'></i> Uploading").prop('disabled', true); 
      //var uploadsinprogress =      
      
      for(var i = 0;i<this.files.length;i++){
        //add preview windows
        var fr = new FileReader();
        fr.onload = function(e){
          var newimagecont = $('.custom-file-container').clone();
          newimagecont.attr('class','newimagecont').appendTo( "#topPostControlsRow" );
          newimagecont.find('.image-preview')[0].style.backgroundImage = "url("+e.target.result+")";
        }
        fr.readAsDataURL(this.files[i]);

        //upload files and add urls to post form
        var fd = new FormData();
        fd.append('image', this.files[i]);
        var imageUploadReq = $.ajax({
          url: '/api/image/v2',
          type: 'POST',
          data: fd,
          processData: false,
          contentType: false
        })
        .done(function( data ) {
          var uploadedImage = JSON.parse(data)
          if (uploadedImage.error){
            if (uploadedImage.error == "filesize"){
              bootbox.alert("Image too large! The maximum size for GIF images is 5MB and for JPG and PNG images is 10MB.");
              resetImageUploadFields();
            }
          }else {
            if($("#postImageUrl").val()){
              $("#postImageUrl").val($("#postImageUrl").val() + " " + uploadedImage.url);
            }else{
              $("#postImageUrl").val(uploadedImage.url);
            }
            $("#postImageTags").val(uploadedImage.tags);
            $("#postSubmit").html(submitButtonValue).prop('disabled', false);
            $(".editable-post-content").removeAttr("required");
          }
        })
      }  
  });
  
    


      $(".image-clear").click(function(e){
        if(imageUploadReq.readyState != 4){
          imageUploadReq.abort();
        }else{
          let jsonResponse = JSON.parse(imageUploadReq.responseText);
          $.post( "/cleartempimage", { imageURL: jsonResponse.url } );
        }
        resetImageUploadFields();
      })
  //})
  // document.onpaste = function(event){
  //   var items = (event.clipboardData || event.originalEvent.clipboardData).items;
  //   for (var i = 0 ; i < items.length ; i++) {
  //     var item = items[i];
  //     if (item.type.indexOf("image") != -1) {
  //       var file = item.getAsFile();
  //       $('#imagePreviewContainer').slideDown('fast');
  //       upload_file_with_ajax(file);
  //     }
  //   }
  // }

  $(window).on("unload", function(e) {
    $.post( "/cleartempimage", { imageURL: $("#postImageUrl")[0].value } );
  });

  $.post('/api/user/followers', function(data){
    followers = JSON.parse(data).followers;
    tribute = new Tribute({
      values: followers,
      menuItemTemplate: function (item) {
        return '<img class="tribute-image" src="/images/'+item.original.image + '">' + item.string;
      }
    })
    tribute.attach($(".editable-text"));
  })
})
</script>

<script type="text/javascript">
$(function() {
  $('body').tooltip({
    selector: '[data-toggle="tooltip"]'
  });
  autosize($('textarea'));
  $("#notificationsContainer").load( "/api/notification/display" );

  $('#notificationsDropdownLink, #notificationsPageLink').hover(function(){
    $(this).find('.badge').css('background-color', '#ce1717');
  }, function() {
    $(this).find('.badge').css('background-color', '#6c757d');
  });

  if ($('#notificationsPageLink').hasClass('active')){
    $('#notificationsPageLink').find('.badge').css('background-color', '#900202');
  }

  // window.onbeforeunload = function() {
  //     return true;
  // };

  // Reload notifications container and check for new posts every minute (hack until we set up WebSockets)
  window.setInterval(function(){
    $("#notificationsContainer").load("/api/notification/display");
    {{#eq activePage "home"}}
    $("#checkNewPosts").load("/showposts/home/{{loggedInUserData._id}}/1", function(error, result){
      let latestPost = $("#checkNewPosts").find(".commentContainer").attr("data-post-id");
      let currentlyDisplayedPost = $("#postsContainer").find(".commentContainer").attr("data-post-id");
      if (latestPost != currentlyDisplayedPost){
        $("#newPostsAvailable").show();
      }
      else {
        $("#newPostsAvailable").hide();
      }
    })
    {{/eq}}
  }, 60000);

  $('body').on('click', '.openReplyBox', function() {
    commentsContainer = $(this).closest(".comment").find(".replyContainer");
    commentsContainer.slideToggle("fast", function(){
      if (commentsContainer.is(':visible')){
        console.log("Comments shown!")
        var post = $(this).closest('.commentContainer');
        $.post("/api/notification/update-by-subject/"+post.attr("data-post-id"), function(data){
          $("#notificationsContainer").load( "/api/notification/display" );
        })
      }
    })
  })
  $('body').on('click', '.show-more', function() {
    var state = $(this).attr("data-state");
    if (state == "contracted") {
      $(this).closest(".post-content").find(".abbreviated-content").animate({height:"100%"},200);
      $(this).attr("data-state","expanded").css("margin-top", "0.25rem");
    }
    else {
      $(this).closest(".post-content").find(".abbreviated-content").animate({height:"7rem"},200);
      $(this).attr("data-state","contracted").css("margin-top", "1rem");
    }
    var text = $(this).text();
    $(this).text(
        text == "Show more" ? "Show less" : "Show more");
  })
  $('body').on('click','.replyEmojiWindowButton', function() {
    $(this).closest('.replyForm').find('.replyEmojiWindow').slideToggle("fast");
  })
  $('body').on('click','.replyEmojiWindow>.emoji', function() {
    var ourTextBox = $(this).closest(".replyForm").find("#commentContent")[0];
    var emoji = event.target.innerHTML;
    if(ourTextBox.selectionStart){ //if the cursor has a position in the box
      var cursorPos = ourTextBox.selectionStart;
      ourTextBox.value = ourTextBox.value.substring(0,cursorPos) + emoji + ourTextBox.value.substring(cursorPos);
      ourTextBox.selectionStart = cursorPos + emoji.length; //this maintains the cursor position so adding multiple emojis at once will put them in the same place
      ourTextBox.selectionEnd = cursorPos + emoji.length;
      ourTextBox.focus();
    }else if(ourTextBox.selectionStart===0){ //special case: when the cursor is at position 0, the above condition won't work, we need to handle that better
      ourTextBox.value = emoji + ourTextBox.value;
      ourTextBox.selectionStart = emoji.length; //this maintains the cursor position so adding multiple emojis at once will put them in the same place
      ourTextBox.selectionEnd = emoji.length;
      ourTextBox.focus();
    }else{ //if there is no cursor, just add it on the end. this is also the only way this will work on IE8 and below.
      ourTextBox.value+=emoji;
      ourTextBox.focus();
    }
  })
  $('body').on('click', '.content-warning-show-more', function() {
    var state = $(this).attr("data-state");
    if (state == "contracted") {
      $(this).closest(".post-content").find(".abbreviated-content").animate({height:"100%"},200);
      $(this).closest(".commentContainer").find(".content-warning-images").show();
      $(this).attr("data-state","expanded");
    }
    else {
      $(this).closest(".post-content").find(".abbreviated-content").animate({height:"0"},200);
      $(this).closest(".commentContainer").find(".content-warning-images").hide();
      $(this).attr("data-state","contracted");
    }
    var text = $(this).text();
    $(this).text(
        text == "Show post" ? "Hide post" : "Show post");
  })
  $('body').on('click', '.replyToComment', function() {
    let replyTextarea = $(this).closest(".replyContainer").children(".replyForm").find("#commentContent")
    replyTextarea.val(replyTextarea.val() + "@" + $(this).attr("data-username") + " ").focus()
  })
  $('body').on('click', '.deletePost', function() {
    var element = $(this);
    bootbox.confirm("Are you sure you want to delete this post?", function(result){
      if (result == true) {
        let divToDelete = element.closest(".commentContainer");
        $.post("/deletepost/"+element.attr("id"), function(data) {
          divToDelete.fadeOut(function() {
            divToDelete.remove();
          });
        });
      }
    });
  })
  $('body').on('click', '.deleteComment', function() {
    var element = $(this);
    bootbox.confirm("Are you sure you want to delete this comment?", function(result){
      if (result == true) {
        let divToDelete = element.closest(".individualReplyContainer");
        $.post("/deletecomment/"+element.attr("data-post-id")+"/"+element.attr("data-comment-id"), function(data) {
          divToDelete.fadeOut(function() {
            divToDelete.remove();
          });
        });
        let counterToChange = element.closest(".commentContainer").find(".openReplyBox")[0];
        let regex = /\s|[(-)]/gi;
        let newCommentCount = parseInt(counterToChange.textContent.replace(regex,""))-1;
        if(newCommentCount!=0){
          counterToChange.innerHTML = counterToChange.innerHTML.replace("(" + (newCommentCount+1) + ")", "(" + (newCommentCount) + ")");
        }else{
          counterToChange.innerHTML = counterToChange.innerHTML.replace("(" + (newCommentCount+1) + ")","");
        }
      }
    });
  })
  $('body').on('click', '.postReply', function() {
    let textarea = $(this).closest(".replyForm").find(".comment-textarea");
    let commentContent = textarea.val();
    let commentsContainer = $(this).closest('.replyContainer').find('.repliesContainer');
    let emojiWindow = $(this).closest('.replyForm').find('.replyEmojiWindow');
    let commentButton = $(this);
    commentButton.prop('disabled', true);
    $.post("/createcomment/"+$(this).attr("data-post-id"), { commentContent: commentContent }, function(data) {
      if (data!='nope'){
        textarea.val("");
        textarea[0].style.height = "";
        let html = '<div class="individualReplyContainer"><div class="mb-1 d-flex"><img class="postAuthorImage" style="width:25px;height:25px;border-radius:3px;" src="/images/' + data.image + '" /><div class="comment-header"><div class="comment-header-row-1">' + data.name + '<div class="comment-header-divider">&middot;</div><div class="commentTimestamp"><small class="text-muted">' + data.timestamp + '</small></div><button type="button" class="btn btn-link btn-xs replyToComment comment-button" data-username="' + data.username + '"><i class="fas fa-reply"></i></button><button type="button" class="btn btn-link btn-xs deleteComment comment-button" id="'+ data.comment_id + '" data-post-id="' + data.post_id + '" data-comment-id="'+data.comment_id+'">&times;</button></div></div></div>' + data.content +'</div>';
        $(html).hide().appendTo(commentsContainer).fadeIn();
        commentButton.prop('disabled', false);
        let counterToChange = commentButton.closest(".commentContainer").find(".openReplyBox")[0];
        let regex = /\s|[(-)]/gi;
        if(counterToChange.textContent.replace(regex,"") === ""){
          counterToChange.innerHTML = counterToChange.innerHTML + " (1)";
        }else{
          let newCommentCount = parseInt(counterToChange.textContent.replace(regex,""))+1;
          counterToChange.innerHTML = counterToChange.innerHTML.replace("(" + (newCommentCount-1) + ")", "(" + (newCommentCount) + ")");
        }
        emojiWindow.hide()
      }
      else {
        let html = '<div class="individualReplyContainer"><div class="alert alert-danger">There has been a problem posting your comment. Sorry! Please copy the comment text, refresh the page, and try again.</div></div>'
        $(html).hide().appendTo(commentsContainer).fadeIn();
        commentButton.prop('disabled', false);
      }
    });
  })
  $('body').on('click', '.notificationLink', function(e) {
    e.preventDefault();
    var link = this.href;
    $.post("/api/notification/update/"+$(this).attr("id"), function( data ) {
      window.location.href = link;
    });
  })
  $('body').on('click', '.mutePost', function(e) {
    var button = $(this);
    bootbox.confirm("You are currently receiving notifications when someone comments on this post. Would you like to mute this post to stop receiving these notifications? You will still be notified if someone mentions you.", function(result){
      if (result == true) {
        $.post("/api/post/unsubscribe/"+button.attr("data-post-id"), function( data ) {
          button.removeClass('mutePost').addClass('unmutePost').html('<i class="far fa-bell-slash"></i>').attr("data-original-title", "Not receiving notifications (click to change)");
        })
      }
    })
  })
  $('body').on('click', '.unmutePost', function(e) {
    var button = $(this);
    bootbox.confirm("You have muted this post. Would you like to unmute it and start receiving notifications when someone comments?", function(result){
      if (result == true) {
        $.post("/api/post/subscribe/"+button.attr("data-post-id"), function( data ) {
          button.removeClass('unmutePost').addClass('mutePost').html('<i class="far fa-bell"></i>').attr("data-original-title", "Receiving notifications (click to change)");
        })
      }
    })
  })
});
</script>

<script type="text/javascript">
$(function() {
  $('body').tooltip({
    selector: '[data-toggle="tooltip"]'
  });
  $("#notificationsContainer").load( "/api/notification/display" );

  $('#notificationsDropdownLink, #notificationsPageLink').hover(function(){
    $(this).find('.badge').css('background-color', '#ce1717');
  }, function() {
    $(this).find('.badge').css('background-color', '#6c757d');
  });
  if ($('#notificationsPageLink').hasClass('active')){
    $('#notificationsPageLink').find('.badge').css('background-color', '#900202');
  }

  $("#darkModeToggle").click(function(e){
    e.preventDefault();
    if ($(this).hasClass('notification-active')){
      $("#darkModeStylesheet").attr("href","")
      $(this).removeClass('notification-active')
    }
    else {
      $("#darkModeStylesheet").attr("href","/css/darkmode.css")
      $(this).addClass('notification-active')
    }
  })

  // Navbar search box

  $('#navbarSearchField').keypress(function(event){
  	var keycode = (event.keyCode ? event.keyCode : event.which);
    var searchQuery = $(this).val();
  	if(keycode == '13'){
  		window.location.href = '/search/' +	searchQuery
  	}
  });
  $("#navbarSearchButton").click(function(event){
    event.preventDefault();
    var searchQuery = $('#navbarSearchField').val();
    window.location.href = '/search/' +	searchQuery
  });


  // window.onbeforeunload = function() {
  //     return true;
  // };

  // Reload notifications container and check for new posts every minute (hack until we set up WebSockets)
  window.setInterval(function(){
    $("#notificationsContainer").load("/api/notification/display");
    {{#eq activePage "home"}}
    $("#checkNewPosts").load("/showposts/home/{{loggedInUserData._id}}/1", function(error, result){
      let latestPost = $("#checkNewPosts").find(".commentContainer").attr("data-post-id");
      let currentlyDisplayedPost = $("#postsContainer").find(".commentContainer").attr("data-post-id");
      if (latestPost != currentlyDisplayedPost){
        $("#newPostsAvailable").show();
      }
      else {
        $("#newPostsAvailable").hide();
      }
    })
    {{/eq}}
  }, 60000);

  $('body').on('click', '.openReplyBox', function() {
    commentsContainer = $(this).closest(".comment").find(".replyContainer");
    commentsContainer.slideToggle("fast", function(){
      if (commentsContainer.is(':visible')){
        if(commentsContainer.height() > $(window).height()){
          var scroll = commentsContainer.offset().top+commentsContainer.height()-$(window).height();
          $("html, body").animate({ scrollTop: scroll+"px" },200);
        }
        var post = $(this).closest('.commentContainer');
        $.post("/api/notification/update-by-subject/"+post.attr("data-post-id"), function(data){
          $("#notificationsContainer").load( "/api/notification/display" );
        })
      }
    })

  })
  $('body').on('click', '.show-more', function() {
    var state = $(this).attr("data-state");
    if (state == "contracted") {
      var h = $(this).prev(".abbreviated-content").css('height','100%').height();
      $(this).prev(".abbreviated-content").css('height','7rem');
      $(this).prev(".abbreviated-content").removeClass("abbreviated-content").addClass("post-content").animate({height:h},200);
      $(this).attr("data-state","expanded");
    }
    else {
      var pC = $(this).prev(".post-content");
      pC.addClass("abbreviated-content").removeClass("post-content").animate({height:"7rem"},200);
      var scroll = pC.offset().top;
      $("html, body").animate({ scrollTop: (scroll-200)+"px" },200); //-200 to roughly account for the navbar covering up the very top of the screen
      $(this).attr("data-state","contracted");
    }
    var text = $(this).text();
    $(this).text(
        text == "Show more" ? "Show less" : "Show more");
  })
  $('body').on('click','.replyEmojiWindowButton', function() {
    $(this).closest('#replyForm').find('.replyEmojiWindow').slideToggle("fast");
  })
  $('body').on('click','.replyEmojiWindow>.add-emoji', function() {
    pasteHtmlAtCaret($(this).closest("#replyForm").find('.editable-comment-content.medium-editor-element'), '<span class="emoji"> ' + event.target.innerHTML + '</span>');
  })

    $('#boostersModal').on('show.bs.modal', function (event) {
        var button = $(event.relatedTarget)
        var users = button.data('users')
        var modal = $(this)
        modal.find('#boosters-list').empty()
        if (users.followedBoosters.includes("you")){
            modal.find('#boosters-list').append('<a href="/{{loggedInUserData.username}}" class="list-group-item">You</li>');
        }
        users.followedBoosters.forEach(function(user) {
            if (user === "you") {
                return;
            }
            modal.find('#boosters-list').append('<a href="/'+user+'" class="list-group-item">@'+user+'<span class="badge badge-secondary float-right">Followed</span></li>')
        })
        users.otherBoosters.forEach(function(user) {
            modal.find('#boosters-list').append('<a href="/'+user+'" class="list-group-item">@'+user+'</li>')
        })
    })

  // $('body').on('click', '.fullBoostList', function(e) {
  //   var thisList = $(this);
  //   thisList.removeClass('fullBoostList');
  //   thisList.addClass('fullBoostListClicked');
  //   function removeBoostListPopUp(e){
  //     thisList.removeClass('fullBoostListClicked');
  //     thisList.addClass('fullBoostList');
  //     $('body').off('click', removeBoostListPopUp);
  //   }
  //   $('body').on('click', removeBoostListPopUp);
  // })
  $('body').on('click', '.content-warning-show-more', function() {
    var state = $(this).attr("data-state");
    var abbContent = $(this).closest(".post-content").find(".abbreviated-content");
    if (state == "contracted") {
      var h = abbContent.css('height','100%').height();
      abbContent.css('height','0');
      abbContent.animate({height:h},200);
      $(this).closest(".commentContainer").find(".content-warning-images").toggleClass("content-warning-images-shown");
      $(this).attr("data-state","expanded");
    }
    else {
      abbContent.animate({height:"0"},200);
      $(this).closest(".commentContainer").find(".content-warning-images").toggleClass("content-warning-images-shown");
      $(this).attr("data-state","contracted");
    }
    var text = $(this).text();
    $(this).text(
        text == "Show post" ? "Hide post" : "Show post");
  })
  $('body').on('click', '.replyToComment', function() {
    pasteHtmlAtCaret($(this).closest(".replyContainer").children("#replyForm").find('.editable-comment-content.medium-editor-element'), "@" + $(this).attr("data-username")+"&nbsp;");
  })
  $('body').on('click', '.deletePost', function() {
    var element = $(this);
    bootbox.confirm("Are you sure you want to delete this post?", function(result){
      if (result == true) {
        let divToDelete = element.closest(".commentContainer");
        $.post("/deletepost/"+element.attr("id"), function(data) {
          divToDelete.fadeOut(function() {
            divToDelete.remove();
          });
        });
      }
    });
  })
  $('body').on('click', '.deleteComment', function() {
    var element = $(this);
    bootbox.confirm("Are you sure you want to delete this comment?", function(result){
      if (result == true) {
        let divToDelete = element.closest(".individualReplyContainer");
        $.post("/deletecomment/"+element.attr("data-post-id")+"/"+element.attr("data-comment-id"), function(data) {
          divToDelete.fadeOut(function() {
            divToDelete.remove();
          });
        });
        let counterToChange = element.closest(".commentContainer").find(".openReplyBox").find(".comments-number")[0];
        let newCommentCount = parseInt(counterToChange.textContent)-1;
        if(newCommentCount!=0){
          counterToChange.innerHTML = counterToChange.innerHTML.replace((newCommentCount+1), newCommentCount);
        }else{
          counterToChange.innerHTML = counterToChange.innerHTML.replace( (newCommentCount+1),"");
        }
      }
    });
  })
  $('body').on('click', '.postReply', function() {
    let commentButton = $(this);
    let replyForm = commentButton.closest('#replyForm');
    let textarea = replyForm.find("textarea.comment-textarea");
    let contentEditable = replyForm.find("div.comment-textarea");
    let commentContent = textarea.val();
    let commentsContainer = commentButton.closest('.replyContainer').find('.repliesContainer');
    let emojiWindow = replyForm.find('.replyEmojiWindow');

    let pc = replyForm.find('#image-preview-holder')[0];

    var sortedurls = []; //will contain urls in preview-window order, instead of the order in which they were recieved from the server
    var imagedescs = [];

    if(pc.uploadsCompleted){
      if(pc.uploadsCompleted != pc.uploadsStarted-pc.uploadsCancelled){
        bootbox.alert("You have image uploads in progress.");
        return;
      }else{
        for(let i=0; i < $(pc).find('.newimagecont').length; i++){
          let imageWindow = $($(pc).find('.newimagecont')[i]); // i feel like there probably exists a cleaner way to do this than $($())?
          sortedurls.push(pc.uploadedImageUrls[imageWindow.attr('urlpos')]);
          imagedescs.push(imageWindow.find('#postImageDescription').val());
        }
      }
    }

    if (commentContent.replace(/<[^>]*>/g, "") != "" || sortedurls.length > 0) { // Filter out empty comments
      commentButton.prop('disabled', true);
      $.post("/createcomment/"+$(this).attr("data-post-id"),
      { commentContent: commentContent,
        imageUrls: JSON.stringify(sortedurls),
        imageDescs: JSON.stringify(imagedescs)
      },
      function(data) {
        if (data!='nope'){
          textarea.val("");
          contentEditable.html("");
          console.log(sortedurls.length)
          classNames = ['one-image','two-images','three-images','four-images'];
          let html = '<div class="individualReplyContainer"><div class="mb-1 d-flex"><img class="postAuthorImage" style="width:25px;height:25px;border-radius:3px;" src="/images/' + data.image + '" /><div class="comment-header"><div class="comment-header-row-1">' + data.name + '<div class="comment-header-divider">&middot;</div><div class="commentTimestamp"><small class="text-muted">' + data.timestamp + '</small></div><button type="button" class="btn btn-link btn-xs replyToComment comment-button" data-username="' + data.username + '"><i class="fas fa-reply"></i></button><button type="button" class="btn btn-link btn-xs deleteComment comment-button" id="'+ data.comment_id + '" data-post-id="' + data.post_id + '" data-comment-id="'+data.comment_id+'">&times;</button></div></div></div><div class="comment-content">' + data.content + (sortedurls.length>0 ? '<div class="post-images '+classNames[sortedurls.length-1]+'"'+(sortedurls.length>1 ? ' data-featherlight-gallery data-featherlight-filter="a"' : '')+'>' : '');
          for (let i=0; i<sortedurls.length;i++){
            html += (sortedurls.length>1 ? '<a href="/api/image/display/'+sortedurls[i]+'">' : '')+'<img alt="'+imagedescs[i]+' (posted by '+$('.navbar-username')[0].innerHTML+')" class="post-single-image" src="/api/image/display/'+sortedurls[i]+'" '+(sortedurls.length==1 ? 'data-featherlight="/api/image/display/'+sortedurls[i]+'"' : '')+'>'+(sortedurls.length>1 ? '</a>' : '');
          }
          html += (sortedurls.length>0 ? '</div>' : '');
          html+='</div></div>';
          $(html).hide().appendTo(commentsContainer).fadeIn();
          commentButton.prop('disabled', false);
          let counterToChange = commentButton.closest(".commentContainer").find(".openReplyBox").find('.comments-number')[0];
          if(counterToChange.textContent === ""){
            counterToChange.innerHTML = "1";
          }else{
            let newCommentCount = parseInt(counterToChange.textContent)+1;
            counterToChange.innerHTML = counterToChange.innerHTML.replace((newCommentCount-1), newCommentCount);
          }
          emojiWindow.hide();
          $(pc).children('.newimagecont').remove(); //removes all image preview windows
          pc.uploadsStarted = 0;
          pc.uploadsCompleted = 0;
          pc.uploadsCancelled = 0;
          pc.uploadedImageUrls = [];
          pc.imageUploadRequests = [];
        }
        else {
          let html = '<div class="individualReplyContainer"><div class="alert alert-danger">There has been a problem posting your comment. Sorry! Please copy the comment text, refresh the page, and try again.</div></div>'
          $(html).hide().appendTo(commentsContainer).fadeIn();
          commentButton.prop('disabled', false);
        }
      });
    }
  })
  $('body').on('click', '.notificationLink', function(e) {
    e.preventDefault();
    var link = this.href;
    $.post("/api/notification/update/"+$(this).attr("id"), function( data ) {
      window.location.href = link;
    });
  })
  $('body').on('click', '.mutePost', function(e) {
    var button = $(this);
    bootbox.confirm("You are currently receiving notifications when someone comments on this post. Would you like to mute this post to stop receiving these notifications? You will still be notified if someone mentions you.", function(result){
      if (result == true) {
        $.post("/api/post/unsubscribe/"+button.attr("data-post-id"), function( data ) {
          button.removeClass('mutePost').addClass('unmutePost').html('<i class="far fa-bell-slash"></i>').attr("data-original-title", "Not receiving notifications (click to change)");
        })
      }
    })
  })
  $('body').on('click', '.unmutePost', function(e) {
    var button = $(this);
    bootbox.confirm("You have muted this post. Would you like to unmute it and start receiving notifications when someone comments?", function(result){
      if (result == true) {
        $.post("/api/post/subscribe/"+button.attr("data-post-id"), function( data ) {
          button.removeClass('unmutePost').addClass('mutePost').html('<i class="far fa-bell"></i>').attr("data-original-title", "Receiving notifications (click to change)");
        })
      }
    })
  })
});
</script>
